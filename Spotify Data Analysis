# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

# Code to create Spotifydata table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )
;

# Then I inserted the Spotify Data .csv into the table.

# Next, I explored the data using the following SQL:

# What is the number of songs and average danceability, liveness, and energy by artist?
SELECT
    artist_name,
    COUNT(track_name) AS num_songs,
    ROUND(AVG(popularity), 2) AS avg_popularity,
    ROUND(AVG(danceability), 2) AS avg_danceability,
    ROUND(AVG(energy), 2) AS avg_energy
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY num_songs DESC;

# Who are the top 10 artists based on popularity?
SELECT DISTINCT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

# What is the average duration of a track in minutes?
SELECT AVG(duration_ms / 60000) AS avg_duration_minutes
FROM BIT_DB.Spotifydata;

# Which artist released the most popular song?
SELECT
    artist_name,
    track_name
FROM BIT_DB.Spotifydata 
WHERE popularity = (SELECT MAX(popularity) FROM BIT_DB.Spotifydata);
